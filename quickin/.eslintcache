[{"/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/index.js":"1","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/App.js":"2","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/pages/Landing.js":"3","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/reportWebVitals.js":"4","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/LandingCard.js":"5","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/pages/IndividualPage.js":"6","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/Lottie.js":"7","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/Lottie2.js":"8","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/pages/BusinessPage.js":"9","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/IndividualForm.js":"10","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/BusinessForm.js":"11","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/pages/Dashboard.js":"12","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/QRCard.js":"13","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/DataCard.js":"14"},{"size":1746,"mtime":1612052675098,"results":"15","hashOfConfig":"16"},{"size":218,"mtime":1612038910331,"results":"17","hashOfConfig":"16"},{"size":2715,"mtime":1612050411345,"results":"18","hashOfConfig":"16"},{"size":362,"mtime":1612028943417,"results":"19","hashOfConfig":"16"},{"size":1173,"mtime":1612031956584,"results":"20","hashOfConfig":"16"},{"size":3493,"mtime":1612059173608,"results":"21","hashOfConfig":"16"},{"size":568,"mtime":1612032198728,"results":"22","hashOfConfig":"16"},{"size":568,"mtime":1612032271342,"results":"23","hashOfConfig":"16"},{"size":1318,"mtime":1612051725338,"results":"24","hashOfConfig":"16"},{"size":7625,"mtime":1612053805319,"results":"25","hashOfConfig":"16"},{"size":10787,"mtime":1612057264772,"results":"26","hashOfConfig":"16"},{"size":2969,"mtime":1612043927023,"results":"27","hashOfConfig":"16"},{"size":2125,"mtime":1612045165632,"results":"28","hashOfConfig":"16"},{"size":1298,"mtime":1612043925023,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1jr1giu",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"32"},"/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/index.js",[],["67","68"],"/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/App.js",[],"/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/pages/Landing.js",[],"/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/reportWebVitals.js",[],"/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/LandingCard.js",["69","70"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport default function LandingCard({image, title, content, handleClick}) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea onClick={() => handleClick()}>\n        <CardMedia>\n            {image}\n        </CardMedia>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{color: '#000'}}>\n            {title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {content}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/pages/IndividualPage.js",["71"],"import React, { useEffect } from 'react';\nimport {Typography, Container, Grid, Zoom, Button, Paper, LinearProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IndividualForm from '../components/IndividualForm.js';\nimport QrReader from 'react-qr-reader'\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 345,\n    },\n    main: {\n        margin: '100px auto',\n    },\n    content: {\n        textAlign: 'center',\n        padding: '1em',\n        color: 'black'\n    },\n    cameraWindow: {\n        margin: '5% auto',\n        border: \"5px solid black\"\n    }\n  });\n\nexport default function IndividualPage(action) {\n    const [authenicated, setAuth] = React.useState(false);\n    const [visitor, setVisitor] = React.useState(undefined);\n    const [scanResult, setResult] = React.useState(undefined);\n    const classes = useStyles();\n      \n    useEffect(() => {\n        if (!authenicated) {\n            checkAuth();\n        }\n        if (!visitor) {\n            fetchVisitorData().then((res)=>setVisitor(res));\n        }\n    })\n\n    const checkIn = async() => {\n\n    }\n\n    const fetchVisitorData = async() => {\n        if (authenicated) {\n            const response = await fetch('/visitor');\n            const data = response.json();\n            return data;\n        }\n        \n    }\n\n    const checkAuth = async () => {\n        const response = await fetch('/visitor/checkSession');\n        const data = await response.json();\n        if (data) {\n            setAuth(true); \n        }  \n    }\n\n    const handleScan = (data) => {\n        if (data) {\n            setResult(data);\n        }\n    }\n\n    const handleError = (err) => {\n        console.log(err);\n    }\n\n    const logout = async () => {\n        fetch('/visitor/logout');\n        setAuth(false);\n    }\n    \n    if (!authenicated) {\n        return (\n            <React.Fragment>\n                <IndividualForm goBack={action.goBack} auth={checkAuth}/>\n            </React.Fragment>\n        );\n    }  \n\n    if (!visitor) {\n        return (\n            <React.Fragment>\n                <LinearProgress/>\n            </React.Fragment>\n        );\n    } \n\n    if (authenicated && visitor) {\n        return (\n            <React.Fragment>\n                <Zoom in={true}>\n                    <Container className={classes.main}>\n                        <Paper elevation={3} className={classes.content}>\n                            <Typography variant='h5'>Welcome {visitor.firstName} {visitor.lastName}</Typography>\n                            <Grid container spacing={2}>  \n                                <Grid item xs={12}>\n                                    <Container className={classes.cameraWindow}>\n                                        <h1>Point the camera to the QR code</h1>\n                                        <QrReader delay={300} onError={handleError} onScan={handleScan} style={{ width: '100%' }}/>\n                                        <p>{scanResult}</p>\n                                    </Container>\n                                </Grid>   \n                                <Grid item xs={12}>\n                                    <Button variant='contained' color='primary' onClick={logout}>Log Out</Button>\n                                </Grid>                \n                            </Grid>\n                        </Paper>              \n                    </Container>\n                </Zoom>\n            </React.Fragment>\n        );\n    }          \n  }","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/Lottie.js",[],"/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/Lottie2.js",[],"/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/pages/BusinessPage.js",["72","73","74","75","76","77","78","79","80"],"import React, { useState, useEffect } from 'react';\nimport {Fab, Typography, Container, Grid, Button, Paper, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BusinessForm from '../components/BusinessForm.js'\nimport Dashboard from '../pages/Dashboard.js'\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 345,\n    },\n    main: {\n        margin: '100px auto',\n    },\n    media: {\n      height: 140,\n    },\n    form: {\n        textAlign: 'center',\n        padding: '1em',\n    \n    },\n  });\n\nexport default function BusinessPage(action) {\n    const classes = useStyles();\n    const [authenticated, setAuth] = React.useState(false);\n\n    useEffect(() => {\n        if (!authenticated) {\n            checkAuth();\n        }\n    })\n\n    const checkAuth = async () => {\n        const response = await fetch('/visitor/checkSession');\n        const data = await response.json();\n        if (data) {\n            setAuth(true); \n        }  \n    }\n\n    if(!authenticated) {\n        return (\n            <React.Fragment>\n                <BusinessForm goBack={action.goBack}/>\n            </React.Fragment>\n        )\n    }\n    if(authenticated) {\n        return (\n            <React.Fragment>\n                <Dashboard/>\n            </React.Fragment>\n        )\n    }\n}\n\n   ","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/IndividualForm.js",["81"],"import React, { useEffect }  from 'react';\nimport {Fab, Container, Grid, Zoom, ButtonGroup, Button, Paper, TextField, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 345,\n    },\n    main: {\n        margin: '100px auto',\n    },\n    form: {\n        textAlign: 'center',\n        padding: '1em',\n    }, \n    buttonGroup: {\n        margine: '0% auto'\n    }\n  });\n\nexport default function IndividualForm(action) {\n    const [login, setLogin] = React.useState(true);\n    const [register, setRegister] = React.useState(false);\n    const [login_email, setlogin_email] = React.useState(undefined);\n    const [login_password, setlogin_password] = React.useState(undefined);\n    const [register_email, setregister_email] = React.useState(undefined);\n    const [register_password, setregister_password] = React.useState(undefined);\n    const [register_re_password, setregister_re_password] = React.useState(undefined);\n    const [register_firstName, setregister_firstName] = React.useState(undefined);\n    const [register_lastName, setregister_lastName] = React.useState(undefined);\n    const [register_phoneNumber, setregister_phoneNumber] = React.useState(undefined);\n\n    const classes = useStyles();\n\n    const renderLogin = () => {\n        setLogin(true);\n        setRegister(false);\n    }\n\n    const renderRegister = () => {\n        setRegister(true);\n        setLogin(false);\n    }\n\n    const handleLogin = () => {\n        if (login_email && login_password) {\n            attemptLogin()\n        }\n        else alert(\"please fill all required field\")\n    }\n\n    async function attemptLogin() {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ email: login_email, password: login_password })\n        };\n        const response = await fetch('/visitor/login', requestOptions);\n        const data = await response.json();\n        if (data.authentication === true) {\n            action.auth(); \n        }               \n    }     \n\n    const handleRegister = () => {\n        if (register_email && register_firstName && register_lastName && register_password && register_phoneNumber && register_re_password && (register_re_password === register_password)) {\n            attemptRegister();\n        }\n        else if (register_re_password !== register_password) {\n            alert(\"same password pls\") \n        }\n        else alert(\"please fill all required field\") \n    }\n\n    async function attemptRegister() {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ email: register_email, password: register_password, firstName: register_firstName, lastName: register_lastName, phoneNumber: register_phoneNumber })\n        };\n        const response = await fetch('/visitor/register', requestOptions);\n        const data = await response.json();\n        if (data.authentication === true) {\n            action.auth(); \n        }               \n    }\n    \n    return (\n        <Zoom in={true}>\n            <Container axWidth={'md'} className={classes.main}>                    \n                <ButtonGroup className={classes.buttonGroup} variant=\"contained\" color=\"primary\">\n                    <Button onClick={renderLogin} color={login ? \"primary\":\"secondary\"}>I have an account</Button>\n                    <Button onClick={renderRegister} color={register ? \"primary\":\"secondary\"}>I want to Register</Button>\n                </ButtonGroup> \n                {login && (\n                    <Paper className={classes.form} elevation={3}>\n                        <Typography variant={'h3'} style={{margin: '2%'}}>Let's get you ready for check in</Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField variant='outlined' label='Email' value={login_email} onChange={(e)=>setlogin_email(e.target.value)}></TextField>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField variant='outlined' label='Password' type='password' value={login_password} onChange={(e)=>setlogin_password(e.target.value)}></TextField>\n                            </Grid>                        \n                            <Grid item xs={12}>\n                                <Button variant='contained' color='primary' disabled={(!login_email || !login_password)} onClick={handleLogin}>Submit</Button>\n                            </Grid>                           \n                        </Grid>\n                    </Paper> \n                )}\n                {register && (\n                        <Paper className={classes.form} elevation={3}>\n                            <Typography variant={'h3'} style={{margin: '2%'}}>Let's setup you up for future check in</Typography>\n                            <Grid container spacing={2}>\n                                <Grid item xs={6}>\n                                    <TextField variant='outlined' label='First Name' value={register_firstName} onChange={(e)=>setregister_firstName(e.target.value)}></TextField>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <TextField variant='outlined' label='Last Name' value={register_lastName} onChange={(e)=>setregister_lastName(e.target.value)}></TextField>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <TextField variant='outlined' label='Phone Number' value={register_phoneNumber} onChange={(e)=>setregister_phoneNumber(e.target.value)}></TextField>\n                                </Grid>\n                                <Grid item xs={6}></Grid>\n                                <Grid item xs={6}>\n                                    <TextField variant='outlined' label='Email' value={register_email} onChange={(e)=>setregister_email(e.target.value)}></TextField>\n                                </Grid>\n                                <Grid item xs={6}></Grid>\n\n                                <Grid item xs={6}>\n                                    <TextField variant='outlined' label='Password' type='password' value={register_password} onChange={(e)=>setregister_password(e.target.value)}></TextField>\n                                </Grid>\n                                {register_password && (\n                                    <Grid item xs={6}>\n                                        <TextField variant='outlined' label='Verify Password' type='password' value={register_re_password} onChange={(e)=>setregister_re_password(e.target.value)}></TextField>\n                                    </Grid> \n                                )}                                                         \n                                <Grid item xs={12}>\n                                    <Button variant='contained' color='primary' onClick={handleRegister}>Submit</Button>\n                                </Grid>                           \n                            </Grid>\n                    </Paper>    \n                )}   \n                <br/>\n                <Fab variant='extended' color='primary' onClick={action.goBack}><ArrowBackIcon/>Home</Fab>                                   \n            </Container> \n        </Zoom>\n    ); \n          \n  }","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/BusinessForm.js",["82"],"import React, { useState } from 'react';\nimport {Fab, Typography, Container, Grid, Button, Paper, Zoom, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 345,\n    },\n    main: {\n        margin: '100px auto',\n    },\n    media: {\n      height: 140,\n    },\n    form: {\n        textAlign: 'center',\n        padding: '1em'\n    },\n  });\n\nexport default function BusinessForm(action) {\n    const classes = useStyles();\n    const [isRegistered, setRegistered] = useState(false);\n    const [isNext, setNext] = useState(false);\n\n    const [login_email, setlogin_email] = React.useState(undefined);\n    const [login_password, setlogin_password] = React.useState(undefined);\n    const [register_email, setregister_email] = React.useState(undefined);\n    const [register_password, setregister_password] = React.useState(undefined);\n    const [register_re_password, setregister_re_password] = React.useState(undefined);\n    const [register_businessName, setregister_businessName] = React.useState(undefined);\n    const [register_addressOne, setRegister_addressOne] = React.useState(undefined);\n    const [register_addressTwo, setRegister_addressTwo] = React.useState(undefined);\n    const [register_postalCode, setRegister_postalCode] = React.useState(undefined);\n    const [register_city, setRegister_city] = React.useState(undefined);\n    const [register_province, setRegister_province] = React.useState(undefined);\n    const [register_country] = React.useState('Canada');\n    const [register_phoneNumber, setRegister_phoneNumber] = React.useState(undefined);\n\n    const handleRegister = () => {\n        if (register_password && register_re_password && (register_re_password === register_password)) {\n            attemptRegister();\n        }\n        else if (register_re_password !== register_password) {\n            alert(\"same password pls\") \n        } else alert('Please fill out all form fields to continue.');\n    }\n\n    const handleLogin = () => {\n        if (login_email && login_password) {\n            attemptLogin()\n        }\n        else alert('Please fill out all form fields to continue.');\n    }\n\n    const handleNext = () => {\n        if (register_email && register_businessName && register_phoneNumber && register_addressOne && register_postalCode && register_city && register_province && register_country) {\n            setNext(true);\n        } else { alert('Please fill out all form fields to continue.'); }\n    }\n\n    async function attemptRegister() {\n        if(!register_addressTwo) {\n            setRegister_addressTwo('N/A');\n        }\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ \n                email: register_email, \n                password: register_password, \n                phoneNumber: register_phoneNumber,\n                businessName: register_businessName,\n                addressOne: register_addressOne,\n                addressTwo: register_addressTwo,\n                city: register_city,\n                postalCode: register_postalCode,\n                province: register_province\n            })\n        };\n        const response = await fetch('/business/register', requestOptions);\n        const data = await response.json();\n        if (data.authentication === true) {\n            action.auth(); \n        }               \n    }\n\n    async function attemptLogin() {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ email: login_email, password: login_password })\n        };\n        const response = await fetch('/business/login', requestOptions);\n        const data = await response.json();\n        if (data.authentication === true) {\n            action.auth(); \n        }               \n    }     \n\n\n    if(!isRegistered && !isNext) {\n        return (\n            <Zoom in={true}>\n                <Container maxWidth={'md'} className={classes.main}>\n                <Paper className={classes.form} elevation={3}>\n                    <Typography variant={'h3'} style={{margin: '2%'}}>Let's get your business setup.</Typography>\n                    <Typography variant={'body1'} style={{margin: '2%'}}>Already have an account?   \n                     <span onClick={() => setRegistered(true)} style={{color: 'blue', textDecoration: 'underline', paddingLeft: 3}}>Login.</span>\n                    </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={6}><TextField variant='outlined' onChange={(e)=>setregister_businessName(e.target.value)} label='Business Name' /></Grid>\n                            <Grid item xs={6}><TextField variant='outlined' onChange={(e)=>setregister_email(e.target.value)} label='Email' /></Grid>\n                            <Grid item xs={6}><TextField variant='outlined' onChange={(e)=>setRegister_phoneNumber(e.target.value)} label='Phone Number'/></Grid> \n                            <Grid container spacing={2} style={{marginTop: 20}}>\n                                <Grid item xs={6}><TextField variant='outlined' onChange={(e)=>setRegister_addressOne(e.target.value)} label='Address Line 1' /></Grid>\n                                <Grid item xs={6}><TextField variant='outlined' onChange={(e)=>setRegister_addressTwo(e.target.value)} label='Address Line 2' /></Grid>\n                                <Grid item xs={6}><TextField variant='outlined' onChange={(e)=>setRegister_postalCode(e.target.value)} label='Postal Code' /></Grid>\n                                <Grid item xs={6}><TextField variant='outlined' onChange={(e)=>setRegister_city(e.target.value)} label='City' /></Grid>\n                                <Grid item xs={6}><TextField variant='outlined' onChange={(e)=>setRegister_province(e.target.value)} label='Province / Territory' /></Grid>\n                                <Grid item xs={6}><TextField disabled={'true'} variant='outlined' label='Canada' /></Grid>\n                            </Grid>           \n                            <Grid container spacing={2} style={{margin: 10}} justify={'center'} alignItems={'center'}>\n                         \n                                <Grid item>\n                                    <Button onClick={() => handleNext()} variant=\"contained\" color='primary'>Next</Button>\n                                </Grid>               \n                            </Grid>        \n                            <Grid item xs={12}>\n                                <Typography variant={'body2'}>Step 1/2</Typography>\n                            </Grid>                   \n                        </Grid>\n                    </Paper> \n                    <br />\n                    <Fab variant='extended' onClick={action.goBack} color='primary'><ArrowBackIcon/>Home</Fab>                                   \n                </Container>\n\n            </Zoom>\n    \n        )\n    } if(isRegistered) {\n        return (\n            <React.Fragment>\n                <Container maxWidth={'md'} className={classes.main}>\n                <Paper className={classes.form} elevation={3}>\n                    <Typography variant={'h3'} style={{margin: '2%'}}>Let's get you logged in!</Typography>\n                    <Typography variant={'body1'} style={{margin: '2%'}}>Don't have an account?   \n                     <span onClick={() => setRegistered(false)} style={{color: 'blue', textDecoration: 'underline', paddingLeft: 3}}>Register.</span>\n                    </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField variant='outlined' onChange={(e)=>setlogin_email(e.target.value)} label='Email'></TextField>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField variant='outlined' type='password' onChange={(e)=>setlogin_password(e.target.value)} label='Password'></TextField>\n                            </Grid>  \n                            <Grid container spacing={2} style={{margin: 10}} justify={'center'} alignItems={'center'}>\n                                <Grid item>\n                                    <Button onClick={() => setNext(false), () => setRegistered(false)} variant=\"contained\" color='primary'>Home</Button>\n                                </Grid>               \n                                <Grid item>\n                                    <Button variant=\"contained\" color='primary' onClick={handleLogin}>Login</Button>\n                                </Grid>   \n                            </Grid>                          \n                        </Grid>\n                    </Paper> \n                </Container>\n            </React.Fragment>\n        )\n    }\n\n    if(isNext && !isRegistered) {\n        return (\n            <React.Fragment>\n                <Container maxWidth={'md'} className={classes.main}>\n                <Paper className={classes.form} elevation={3}>\n                    <Typography variant={'h3'} style={{margin: '2%'}}>Let's get your business setup.</Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField variant='outlined' type='password' onChange={(e)=>setregister_password(e.target.value)} label='Password'></TextField>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField variant='outlined' type='password'  onChange={(e)=>setregister_re_password(e.target.value)} label='Confirm Password'></TextField>\n                            </Grid>\n                            <Grid container spacing={2} style={{margin: 10}} justify={'center'} alignItems={'center'}>\n                                <Grid item>\n                                    <Button onClick={() => setNext(false)} variant=\"contained\" color='primary'>Back</Button>\n                                </Grid>               \n                                <Grid item>\n                                    <Button variant=\"contained\" color='primary' onClick={handleRegister}>Login</Button>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Typography variant={'body2'}>Step 2/2</Typography>\n                            </Grid>  \n                        </Grid>\n                    </Paper> \n                </Container>\n            </React.Fragment>\n        )\n    }\n}\n ","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/pages/Dashboard.js",["83","84","85","86","87","88","89"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport QRCard from '../components/QRCard.js';\nimport DataCard from '../components/DataCard.js';\n\nimport {Fab, Typography, Container, Grid, Button, Paper, TextField, Box, AppBar, Tabs, Tab, Card, CardActions, CardContent} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction TabPanel(props) {\nconst { children, value, index, ...other } = props;\n\nreturn (\n    <div\n    role=\"tabpanel\"\n    hidden={value !== index}\n    id={`simple-tabpanel-${index}`}\n    aria-labelledby={`simple-tab-${index}`}\n    {...other}\n    >\n    {value === index && (\n        <Box p={3}>\n        <Typography>{children}</Typography>\n        </Box>\n    )}\n    </div>\n);\n}\n\nTabPanel.propTypes = {\nchildren: PropTypes.node,\nindex: PropTypes.any.isRequired,\nvalue: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\nreturn {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n};\n}\n\nconst useStyles = makeStyles((theme) => ({\nroot: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n},\n}));\n\nexport default function Dashboard() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n      };\n    return (\n        <React.Fragment>\n            <Paper className={classes.form} elevation={3}>\n                <Container maxWidth={'md'}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <Typography variant={'h4'}>Welcome, Team Shonies</Typography>\n                        </Grid>        \n                        <Grid item xs={12}>\n                            <div className={classes.root}>\n                                <AppBar position=\"static\">\n                                    <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n                                    <Tab label=\"Generate QR Code\" {...a11yProps(0)} />\n                                    <Tab label=\"Check-In Data\" {...a11yProps(1)} />\n                                    <Tab label=\"Settings\" {...a11yProps(2)} />\n                                    </Tabs>\n                                </AppBar>\n                                <TabPanel value={value} index={0}>\n                                    <QRCard />\n                                </TabPanel>\n                                <TabPanel value={value} index={1}>\n                                    <DataCard />\n                                </TabPanel>\n                                <TabPanel value={value} index={2}>\n                                    Item Three\n                                </TabPanel>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Paper>\n        </React.Fragment>\n    )\n}\n\n   ","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/QRCard.js",["90","91","92","93","94","95","96","97","98","99","100","101","102"],"import React, { useState } from 'react';\nimport {Fab, Typography, Container, Grid, Button, Paper, TextField, Box, AppBar, Tabs, Tab, Card, CardActions, CardContent} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport QRCode from \"qrcode.react\";\n\nexport default function QRCard(value) { \n\n    const downloadQRCode = () => {\n        const canvas = document.getElementById(\"canvas\");\n        const pngUrl = canvas\n          .toDataURL(\"image/png\")\n          .replace(\"image/png\", \"image/octet-stream\");\n        let downloadLink = document.createElement(\"a\");\n        downloadLink.href = pngUrl;\n        downloadLink.download = \"qr.png\";\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n    }\n\n    return (\n        <React.Fragment>\n            <Grid container justify={'center'} alignItems={'center'}>\n                <Grid item xs={12}>\n                    <Typography style={{textAlign: 'center'}} variant={'body1'}>\n                        <b>Here is your unique QR Code:</b>\n                    </Typography>\n                    <Typography style={{textAlign: 'center'}} variant={'body2'}>\n                        You may download this code and place it where your customers can see it.\n                        Simply get them to scan the QR Code and their contact information is recorded\n                        and safely stored for your convenience.\n                    </Typography>\n                    <br />\n                </Grid>\n                <Grid item xs={2}>\n                    <div id='qr-code'>\n                        <QRCode value=\"google.ca\" id=\"canvas\" />\n                    </div>\n                </Grid>\n                <Grid container spacing={2} style={{margin: 10}} justify={'center'} alignItems={'center'}> \n                    <Grid item>\n                        <Button onClick={() => downloadQRCode()} variant=\"contained\" color='primary'>Download</Button>\n                    </Grid>               \n                </Grid>   \n            </Grid>\n        </React.Fragment>\n    )\n}","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/DataCard.js",["103","104","105","106","107","108","109","110","111","112","113","114","115","116"],"import React, { useState } from 'react';\nimport {Fab, Typography, Container, Grid, Button, Paper, TextField, Box, AppBar, Tabs, Tab, Card, CardActions, CardContent} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default function DataCard() { \n    const [count, setCount] = React.useState(0);\n\n    return (\n        <React.Fragment>\n            <Grid container justify={'center'} alignItems={'center'}>\n                <Grid item xs={12}>\n                    <Typography style={{textAlign: 'center'}} variant={'body1'}>\n                        Access your contact tracing data below.\n                    </Typography>\n                    <br />\n                    <Grid container justify={'center'} alignItems={'center'}>\n                        <Grid item xs={6} >\n                            <Paper elevation={3}>\n                                <Typography variant={'body2'} style={{textAlign: 'center'}}>Total check-ins logged today:</Typography> \n                                <Typography variant={'h1'} style={{textAlign: 'center'}}>{count}</Typography>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                    \n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}",{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":19},{"ruleId":"121","severity":1,"message":"125","line":8,"column":8,"nodeType":"123","messageId":"124","endLine":8,"endColumn":14},{"ruleId":"121","severity":1,"message":"126","line":40,"column":11,"nodeType":"123","messageId":"124","endLine":40,"endColumn":18},{"ruleId":"121","severity":1,"message":"127","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"128","line":2,"column":9,"nodeType":"123","messageId":"124","endLine":2,"endColumn":12},{"ruleId":"121","severity":1,"message":"129","line":2,"column":14,"nodeType":"123","messageId":"124","endLine":2,"endColumn":24},{"ruleId":"121","severity":1,"message":"130","line":2,"column":26,"nodeType":"123","messageId":"124","endLine":2,"endColumn":35},{"ruleId":"121","severity":1,"message":"131","line":2,"column":37,"nodeType":"123","messageId":"124","endLine":2,"endColumn":41},{"ruleId":"121","severity":1,"message":"125","line":2,"column":43,"nodeType":"123","messageId":"124","endLine":2,"endColumn":49},{"ruleId":"121","severity":1,"message":"132","line":2,"column":51,"nodeType":"123","messageId":"124","endLine":2,"endColumn":56},{"ruleId":"121","severity":1,"message":"133","line":2,"column":58,"nodeType":"123","messageId":"124","endLine":2,"endColumn":67},{"ruleId":"121","severity":1,"message":"134","line":25,"column":11,"nodeType":"123","messageId":"124","endLine":25,"endColumn":18},{"ruleId":"121","severity":1,"message":"135","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":26},{"ruleId":"136","severity":1,"message":"137","line":160,"column":74,"nodeType":"138","messageId":"139","endLine":160,"endColumn":75},{"ruleId":"121","severity":1,"message":"127","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"128","line":6,"column":9,"nodeType":"123","messageId":"124","endLine":6,"endColumn":12},{"ruleId":"121","severity":1,"message":"125","line":6,"column":43,"nodeType":"123","messageId":"124","endLine":6,"endColumn":49},{"ruleId":"121","severity":1,"message":"133","line":6,"column":58,"nodeType":"123","messageId":"124","endLine":6,"endColumn":67},{"ruleId":"121","severity":1,"message":"140","line":6,"column":93,"nodeType":"123","messageId":"124","endLine":6,"endColumn":97},{"ruleId":"121","severity":1,"message":"122","line":6,"column":99,"nodeType":"123","messageId":"124","endLine":6,"endColumn":110},{"ruleId":"121","severity":1,"message":"141","line":6,"column":112,"nodeType":"123","messageId":"124","endLine":6,"endColumn":123},{"ruleId":"121","severity":1,"message":"127","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"128","line":2,"column":9,"nodeType":"123","messageId":"124","endLine":2,"endColumn":12},{"ruleId":"121","severity":1,"message":"130","line":2,"column":26,"nodeType":"123","messageId":"124","endLine":2,"endColumn":35},{"ruleId":"121","severity":1,"message":"132","line":2,"column":51,"nodeType":"123","messageId":"124","endLine":2,"endColumn":56},{"ruleId":"121","severity":1,"message":"133","line":2,"column":58,"nodeType":"123","messageId":"124","endLine":2,"endColumn":67},{"ruleId":"121","severity":1,"message":"142","line":2,"column":69,"nodeType":"123","messageId":"124","endLine":2,"endColumn":72},{"ruleId":"121","severity":1,"message":"143","line":2,"column":74,"nodeType":"123","messageId":"124","endLine":2,"endColumn":80},{"ruleId":"121","severity":1,"message":"144","line":2,"column":82,"nodeType":"123","messageId":"124","endLine":2,"endColumn":86},{"ruleId":"121","severity":1,"message":"145","line":2,"column":88,"nodeType":"123","messageId":"124","endLine":2,"endColumn":91},{"ruleId":"121","severity":1,"message":"140","line":2,"column":93,"nodeType":"123","messageId":"124","endLine":2,"endColumn":97},{"ruleId":"121","severity":1,"message":"122","line":2,"column":99,"nodeType":"123","messageId":"124","endLine":2,"endColumn":110},{"ruleId":"121","severity":1,"message":"141","line":2,"column":112,"nodeType":"123","messageId":"124","endLine":2,"endColumn":123},{"ruleId":"121","severity":1,"message":"146","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":20},{"ruleId":"121","severity":1,"message":"127","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"128","line":2,"column":9,"nodeType":"123","messageId":"124","endLine":2,"endColumn":12},{"ruleId":"121","severity":1,"message":"130","line":2,"column":26,"nodeType":"123","messageId":"124","endLine":2,"endColumn":35},{"ruleId":"121","severity":1,"message":"125","line":2,"column":43,"nodeType":"123","messageId":"124","endLine":2,"endColumn":49},{"ruleId":"121","severity":1,"message":"133","line":2,"column":58,"nodeType":"123","messageId":"124","endLine":2,"endColumn":67},{"ruleId":"121","severity":1,"message":"142","line":2,"column":69,"nodeType":"123","messageId":"124","endLine":2,"endColumn":72},{"ruleId":"121","severity":1,"message":"143","line":2,"column":74,"nodeType":"123","messageId":"124","endLine":2,"endColumn":80},{"ruleId":"121","severity":1,"message":"144","line":2,"column":82,"nodeType":"123","messageId":"124","endLine":2,"endColumn":86},{"ruleId":"121","severity":1,"message":"145","line":2,"column":88,"nodeType":"123","messageId":"124","endLine":2,"endColumn":91},{"ruleId":"121","severity":1,"message":"140","line":2,"column":93,"nodeType":"123","messageId":"124","endLine":2,"endColumn":97},{"ruleId":"121","severity":1,"message":"122","line":2,"column":99,"nodeType":"123","messageId":"124","endLine":2,"endColumn":110},{"ruleId":"121","severity":1,"message":"141","line":2,"column":112,"nodeType":"123","messageId":"124","endLine":2,"endColumn":123},{"ruleId":"121","severity":1,"message":"146","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":20},{"ruleId":"121","severity":1,"message":"147","line":6,"column":19,"nodeType":"123","messageId":"124","endLine":6,"endColumn":27},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'CardActions' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'checkIn' is assigned a value but never used.","'useState' is defined but never used.","'Fab' is defined but never used.","'Typography' is defined but never used.","'Container' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'TextField' is defined but never used.","'classes' is assigned a value but never used.","'useEffect' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Card' is defined but never used.","'CardContent' is defined but never used.","'Box' is defined but never used.","'AppBar' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'makeStyles' is defined but never used.","'setCount' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]