[{"/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/index.js":"1","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/App.js":"2","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/pages/Landing.js":"3","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/reportWebVitals.js":"4","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/LandingCard.js":"5","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/pages/IndividualPage.js":"6","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/Lottie.js":"7","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/Lottie2.js":"8","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/pages/BusinessPage.js":"9","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/IndividualForm.js":"10","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/BusinessForm.js":"11","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/pages/Dashboard.js":"12","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/QRCard.js":"13","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/DataCard.js":"14"},{"size":1746,"mtime":1612052675098,"results":"15","hashOfConfig":"16"},{"size":218,"mtime":1612038910331,"results":"17","hashOfConfig":"16"},{"size":2715,"mtime":1612050411345,"results":"18","hashOfConfig":"16"},{"size":362,"mtime":1612028943417,"results":"19","hashOfConfig":"16"},{"size":1173,"mtime":1612031956584,"results":"20","hashOfConfig":"16"},{"size":4667,"mtime":1612067930359,"results":"21","hashOfConfig":"16"},{"size":568,"mtime":1612032198728,"results":"22","hashOfConfig":"16"},{"size":568,"mtime":1612032271342,"results":"23","hashOfConfig":"16"},{"size":1898,"mtime":1612067231799,"results":"24","hashOfConfig":"16"},{"size":7625,"mtime":1612063405812,"results":"25","hashOfConfig":"16"},{"size":10787,"mtime":1612063168012,"results":"26","hashOfConfig":"16"},{"size":3126,"mtime":1612067795473,"results":"27","hashOfConfig":"16"},{"size":2244,"mtime":1612067883179,"results":"28","hashOfConfig":"16"},{"size":1298,"mtime":1612043925023,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1jr1giu",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},"/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/index.js",[],["63","64"],"/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/App.js",[],"/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/pages/Landing.js",[],"/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/reportWebVitals.js",[],"/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/LandingCard.js",["65","66"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport default function LandingCard({image, title, content, handleClick}) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea onClick={() => handleClick()}>\n        <CardMedia>\n            {image}\n        </CardMedia>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{color: '#000'}}>\n            {title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {content}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/pages/IndividualPage.js",[],"/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/Lottie.js",[],"/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/Lottie2.js",[],"/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/pages/BusinessPage.js",["67","68","69","70","71","72","73","74","75"],"import React, { useState, useEffect } from 'react';\nimport {Fab, Typography, Container, Grid, Button, Paper, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BusinessForm from '../components/BusinessForm.js'\nimport Dashboard from '../pages/Dashboard.js'\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 345,\n    },\n    main: {\n        margin: '100px auto',\n    },\n    media: {\n      height: 140,\n    },\n    form: {\n        textAlign: 'center',\n        padding: '1em',\n    \n    },\n  });\n\nexport default function BusinessPage(action) {\n    const classes = useStyles();\n    const [authenticated, setAuth] = React.useState(false);\n    const [business, setBusiness] = React.useState(false);\n\n    useEffect(() => {\n        if (!authenticated) {\n            checkAuth();\n        }\n        if(!business) {\n            fetchBusiness().then((res)=>setBusiness(res));\n        }\n    })\n\n    const fetchBusiness = async() => {\n        if (authenticated) {\n            const response = await fetch('/business');\n            const data = response.json();\n            console.log(data);\n            return data;\n        }\n        \n    }\n\n    const checkAuth = async () => {\n        const response = await fetch('/business/checkSession');\n        const data = await response.json();\n        if (data) {\n            setAuth(true); \n        }  \n    }\n\n    if(!authenticated) {\n        return (\n            <React.Fragment>\n                <BusinessForm goBack={action.goBack} auth={checkAuth}/>\n            </React.Fragment>\n        )\n    }\n    if(authenticated && !business) {\n        return (\n            <h1>Loading...</h1>\n\n        )\n    }\n    if(authenticated && business) {\n        return (\n            <React.Fragment>\n                <Dashboard isAuthenticated={authenticated} busi={business}/>\n            </React.Fragment>\n        )\n    }\n}\n\n   ","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/IndividualForm.js",["76"],"/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/BusinessForm.js",["77"],"import React, { useState } from 'react';\nimport {Fab, Typography, Container, Grid, Button, Paper, Zoom, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 345,\n    },\n    main: {\n        margin: '100px auto',\n    },\n    media: {\n      height: 140,\n    },\n    form: {\n        textAlign: 'center',\n        padding: '1em'\n    },\n  });\n\nexport default function BusinessForm(action) {\n    const classes = useStyles();\n    const [isRegistered, setRegistered] = useState(false);\n    const [isNext, setNext] = useState(false);\n\n    const [login_email, setlogin_email] = React.useState(undefined);\n    const [login_password, setlogin_password] = React.useState(undefined);\n    const [register_email, setregister_email] = React.useState(undefined);\n    const [register_password, setregister_password] = React.useState(undefined);\n    const [register_re_password, setregister_re_password] = React.useState(undefined);\n    const [register_businessName, setregister_businessName] = React.useState(undefined);\n    const [register_addressOne, setRegister_addressOne] = React.useState(undefined);\n    const [register_addressTwo, setRegister_addressTwo] = React.useState(undefined);\n    const [register_postalCode, setRegister_postalCode] = React.useState(undefined);\n    const [register_city, setRegister_city] = React.useState(undefined);\n    const [register_province, setRegister_province] = React.useState(undefined);\n    const [register_country] = React.useState('Canada');\n    const [register_phoneNumber, setRegister_phoneNumber] = React.useState(undefined);\n\n    const handleRegister = () => {\n        if (register_password && register_re_password && (register_re_password === register_password)) {\n            attemptRegister();\n        }\n        else if (register_re_password !== register_password) {\n            alert(\"same password pls\") \n        } else alert('Please fill out all form fields to continue.');\n    }\n\n    const handleLogin = () => {\n        if (login_email && login_password) {\n            attemptLogin()\n        }\n        else alert('Please fill out all form fields to continue.');\n    }\n\n    const handleNext = () => {\n        if (register_email && register_businessName && register_phoneNumber && register_addressOne && register_postalCode && register_city && register_province && register_country) {\n            setNext(true);\n        } else { alert('Please fill out all form fields to continue.'); }\n    }\n\n    async function attemptRegister() {\n        if(!register_addressTwo) {\n            setRegister_addressTwo('N/A');\n        }\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ \n                email: register_email, \n                password: register_password, \n                phoneNumber: register_phoneNumber,\n                businessName: register_businessName,\n                addressOne: register_addressOne,\n                addressTwo: register_addressTwo,\n                city: register_city,\n                postalCode: register_postalCode,\n                province: register_province\n            })\n        };\n        const response = await fetch('/business/register', requestOptions);\n        const data = await response.json();\n        if (data.authentication === true) {\n            action.auth(); \n        }               \n    }\n\n    async function attemptLogin() {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ email: login_email, password: login_password })\n        };\n        const response = await fetch('/business/login', requestOptions);\n        const data = await response.json();\n        if (data.authentication === true) {\n            action.auth(); \n        }               \n    }     \n\n\n    if(!isRegistered && !isNext) {\n        return (\n            <Zoom in={true}>\n                <Container maxWidth={'md'} className={classes.main}>\n                <Paper className={classes.form} elevation={3}>\n                    <Typography variant={'h3'} style={{margin: '2%'}}>Let's get your business setup.</Typography>\n                    <Typography variant={'body1'} style={{margin: '2%'}}>Already have an account?   \n                     <span onClick={() => setRegistered(true)} style={{color: 'blue', textDecoration: 'underline', paddingLeft: 3}}>Login.</span>\n                    </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={6}><TextField variant='outlined' onChange={(e)=>setregister_businessName(e.target.value)} label='Business Name' /></Grid>\n                            <Grid item xs={6}><TextField variant='outlined' onChange={(e)=>setregister_email(e.target.value)} label='Email' /></Grid>\n                            <Grid item xs={6}><TextField variant='outlined' onChange={(e)=>setRegister_phoneNumber(e.target.value)} label='Phone Number'/></Grid> \n                            <Grid container spacing={2} style={{marginTop: 20}}>\n                                <Grid item xs={6}><TextField variant='outlined' onChange={(e)=>setRegister_addressOne(e.target.value)} label='Address Line 1' /></Grid>\n                                <Grid item xs={6}><TextField variant='outlined' onChange={(e)=>setRegister_addressTwo(e.target.value)} label='Address Line 2' /></Grid>\n                                <Grid item xs={6}><TextField variant='outlined' onChange={(e)=>setRegister_postalCode(e.target.value)} label='Postal Code' /></Grid>\n                                <Grid item xs={6}><TextField variant='outlined' onChange={(e)=>setRegister_city(e.target.value)} label='City' /></Grid>\n                                <Grid item xs={6}><TextField variant='outlined' onChange={(e)=>setRegister_province(e.target.value)} label='Province / Territory' /></Grid>\n                                <Grid item xs={6}><TextField disabled={'true'} variant='outlined' label='Canada' /></Grid>\n                            </Grid>           \n                            <Grid container spacing={2} style={{margin: 10}} justify={'center'} alignItems={'center'}>\n                         \n                                <Grid item>\n                                    <Button onClick={() => handleNext()} variant=\"contained\" color='primary'>Next</Button>\n                                </Grid>               \n                            </Grid>        \n                            <Grid item xs={12}>\n                                <Typography variant={'body2'}>Step 1/2</Typography>\n                            </Grid>                   \n                        </Grid>\n                    </Paper> \n                    <br />\n                    <Fab variant='extended' onClick={action.goBack} color='primary'><ArrowBackIcon/>Home</Fab>                                   \n                </Container>\n\n            </Zoom>\n    \n        )\n    } if(isRegistered) {\n        return (\n            <React.Fragment>\n                <Container maxWidth={'md'} className={classes.main}>\n                <Paper className={classes.form} elevation={3}>\n                    <Typography variant={'h3'} style={{margin: '2%'}}>Let's get you logged in!</Typography>\n                    <Typography variant={'body1'} style={{margin: '2%'}}>Don't have an account?   \n                     <span onClick={() => setRegistered(false)} style={{color: 'blue', textDecoration: 'underline', paddingLeft: 3}}>Register.</span>\n                    </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField variant='outlined' onChange={(e)=>setlogin_email(e.target.value)} label='Email'></TextField>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField variant='outlined' type='password' onChange={(e)=>setlogin_password(e.target.value)} label='Password'></TextField>\n                            </Grid>  \n                            <Grid container spacing={2} style={{margin: 10}} justify={'center'} alignItems={'center'}>\n                                <Grid item>\n                                    <Button onClick={() => setNext(false), () => setRegistered(false)} variant=\"contained\" color='primary'>Home</Button>\n                                </Grid>               \n                                <Grid item>\n                                    <Button variant=\"contained\" color='primary' onClick={handleLogin}>Login</Button>\n                                </Grid>   \n                            </Grid>                          \n                        </Grid>\n                    </Paper> \n                </Container>\n            </React.Fragment>\n        )\n    }\n\n    if(isNext && !isRegistered) {\n        return (\n            <React.Fragment>\n                <Container maxWidth={'md'} className={classes.main}>\n                <Paper className={classes.form} elevation={3}>\n                    <Typography variant={'h3'} style={{margin: '2%'}}>Let's get your business setup.</Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField variant='outlined' type='password' onChange={(e)=>setregister_password(e.target.value)} label='Password'></TextField>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField variant='outlined' type='password'  onChange={(e)=>setregister_re_password(e.target.value)} label='Confirm Password'></TextField>\n                            </Grid>\n                            <Grid container spacing={2} style={{margin: 10}} justify={'center'} alignItems={'center'}>\n                                <Grid item>\n                                    <Button onClick={() => setNext(false)} variant=\"contained\" color='primary'>Back</Button>\n                                </Grid>               \n                                <Grid item>\n                                    <Button variant=\"contained\" color='primary' onClick={handleRegister}>Login</Button>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Typography variant={'body2'}>Step 2/2</Typography>\n                            </Grid>  \n                        </Grid>\n                    </Paper> \n                </Container>\n            </React.Fragment>\n        )\n    }\n}\n ","/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/pages/Dashboard.js",["78","79","80","81","82","83","84"],"/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/QRCard.js",["85","86","87","88","89","90","91","92","93","94","95","96","97","98"],"/Users/joseph/Documents/GitHub/cuhacking_2021/quickin/src/components/DataCard.js",["99","100","101","102","103","104","105","106","107","108","109","110","111","112"],"import React, { useState } from 'react';\nimport {Fab, Typography, Container, Grid, Button, Paper, TextField, Box, AppBar, Tabs, Tab, Card, CardActions, CardContent} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default function DataCard() { \n    const [count, setCount] = React.useState(0);\n\n    return (\n        <React.Fragment>\n            <Grid container justify={'center'} alignItems={'center'}>\n                <Grid item xs={12}>\n                    <Typography style={{textAlign: 'center'}} variant={'body1'}>\n                        Access your contact tracing data below.\n                    </Typography>\n                    <br />\n                    <Grid container justify={'center'} alignItems={'center'}>\n                        <Grid item xs={6} >\n                            <Paper elevation={3}>\n                                <Typography variant={'body2'} style={{textAlign: 'center'}}>Total check-ins logged today:</Typography> \n                                <Typography variant={'h1'} style={{textAlign: 'center'}}>{count}</Typography>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                    \n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}",{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":5,"column":8,"nodeType":"119","messageId":"120","endLine":5,"endColumn":19},{"ruleId":"117","severity":1,"message":"121","line":8,"column":8,"nodeType":"119","messageId":"120","endLine":8,"endColumn":14},{"ruleId":"117","severity":1,"message":"122","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"123","line":2,"column":9,"nodeType":"119","messageId":"120","endLine":2,"endColumn":12},{"ruleId":"117","severity":1,"message":"124","line":2,"column":14,"nodeType":"119","messageId":"120","endLine":2,"endColumn":24},{"ruleId":"117","severity":1,"message":"125","line":2,"column":26,"nodeType":"119","messageId":"120","endLine":2,"endColumn":35},{"ruleId":"117","severity":1,"message":"126","line":2,"column":37,"nodeType":"119","messageId":"120","endLine":2,"endColumn":41},{"ruleId":"117","severity":1,"message":"121","line":2,"column":43,"nodeType":"119","messageId":"120","endLine":2,"endColumn":49},{"ruleId":"117","severity":1,"message":"127","line":2,"column":51,"nodeType":"119","messageId":"120","endLine":2,"endColumn":56},{"ruleId":"117","severity":1,"message":"128","line":2,"column":58,"nodeType":"119","messageId":"120","endLine":2,"endColumn":67},{"ruleId":"117","severity":1,"message":"129","line":25,"column":11,"nodeType":"119","messageId":"120","endLine":25,"endColumn":18},{"ruleId":"117","severity":1,"message":"130","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"131","severity":1,"message":"132","line":160,"column":74,"nodeType":"133","messageId":"134","endLine":160,"endColumn":75},{"ruleId":"117","severity":1,"message":"122","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"123","line":6,"column":9,"nodeType":"119","messageId":"120","endLine":6,"endColumn":12},{"ruleId":"117","severity":1,"message":"121","line":6,"column":43,"nodeType":"119","messageId":"120","endLine":6,"endColumn":49},{"ruleId":"117","severity":1,"message":"128","line":6,"column":58,"nodeType":"119","messageId":"120","endLine":6,"endColumn":67},{"ruleId":"117","severity":1,"message":"135","line":6,"column":93,"nodeType":"119","messageId":"120","endLine":6,"endColumn":97},{"ruleId":"117","severity":1,"message":"118","line":6,"column":99,"nodeType":"119","messageId":"120","endLine":6,"endColumn":110},{"ruleId":"117","severity":1,"message":"136","line":6,"column":112,"nodeType":"119","messageId":"120","endLine":6,"endColumn":123},{"ruleId":"117","severity":1,"message":"122","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"123","line":2,"column":9,"nodeType":"119","messageId":"120","endLine":2,"endColumn":12},{"ruleId":"117","severity":1,"message":"125","line":2,"column":26,"nodeType":"119","messageId":"120","endLine":2,"endColumn":35},{"ruleId":"117","severity":1,"message":"127","line":2,"column":51,"nodeType":"119","messageId":"120","endLine":2,"endColumn":56},{"ruleId":"117","severity":1,"message":"128","line":2,"column":58,"nodeType":"119","messageId":"120","endLine":2,"endColumn":67},{"ruleId":"117","severity":1,"message":"137","line":2,"column":69,"nodeType":"119","messageId":"120","endLine":2,"endColumn":72},{"ruleId":"117","severity":1,"message":"138","line":2,"column":74,"nodeType":"119","messageId":"120","endLine":2,"endColumn":80},{"ruleId":"117","severity":1,"message":"139","line":2,"column":82,"nodeType":"119","messageId":"120","endLine":2,"endColumn":86},{"ruleId":"117","severity":1,"message":"140","line":2,"column":88,"nodeType":"119","messageId":"120","endLine":2,"endColumn":91},{"ruleId":"117","severity":1,"message":"135","line":2,"column":93,"nodeType":"119","messageId":"120","endLine":2,"endColumn":97},{"ruleId":"117","severity":1,"message":"118","line":2,"column":99,"nodeType":"119","messageId":"120","endLine":2,"endColumn":110},{"ruleId":"117","severity":1,"message":"136","line":2,"column":112,"nodeType":"119","messageId":"120","endLine":2,"endColumn":123},{"ruleId":"117","severity":1,"message":"141","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":20},{"ruleId":"117","severity":1,"message":"142","line":21,"column":9,"nodeType":"119","messageId":"120","endLine":21,"endColumn":16},{"ruleId":"117","severity":1,"message":"122","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"123","line":2,"column":9,"nodeType":"119","messageId":"120","endLine":2,"endColumn":12},{"ruleId":"117","severity":1,"message":"125","line":2,"column":26,"nodeType":"119","messageId":"120","endLine":2,"endColumn":35},{"ruleId":"117","severity":1,"message":"121","line":2,"column":43,"nodeType":"119","messageId":"120","endLine":2,"endColumn":49},{"ruleId":"117","severity":1,"message":"128","line":2,"column":58,"nodeType":"119","messageId":"120","endLine":2,"endColumn":67},{"ruleId":"117","severity":1,"message":"137","line":2,"column":69,"nodeType":"119","messageId":"120","endLine":2,"endColumn":72},{"ruleId":"117","severity":1,"message":"138","line":2,"column":74,"nodeType":"119","messageId":"120","endLine":2,"endColumn":80},{"ruleId":"117","severity":1,"message":"139","line":2,"column":82,"nodeType":"119","messageId":"120","endLine":2,"endColumn":86},{"ruleId":"117","severity":1,"message":"140","line":2,"column":88,"nodeType":"119","messageId":"120","endLine":2,"endColumn":91},{"ruleId":"117","severity":1,"message":"135","line":2,"column":93,"nodeType":"119","messageId":"120","endLine":2,"endColumn":97},{"ruleId":"117","severity":1,"message":"118","line":2,"column":99,"nodeType":"119","messageId":"120","endLine":2,"endColumn":110},{"ruleId":"117","severity":1,"message":"136","line":2,"column":112,"nodeType":"119","messageId":"120","endLine":2,"endColumn":123},{"ruleId":"117","severity":1,"message":"141","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":20},{"ruleId":"117","severity":1,"message":"143","line":6,"column":19,"nodeType":"119","messageId":"120","endLine":6,"endColumn":27},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'CardActions' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'useState' is defined but never used.","'Fab' is defined but never used.","'Typography' is defined but never used.","'Container' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'TextField' is defined but never used.","'classes' is assigned a value but never used.","'useEffect' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Card' is defined but never used.","'CardContent' is defined but never used.","'Box' is defined but never used.","'AppBar' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'makeStyles' is defined but never used.","'qrValue' is assigned a value but never used.","'setCount' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]